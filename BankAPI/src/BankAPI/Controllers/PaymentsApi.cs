/*
 * Bank API Mock
 *
 * Mock of a Bank API  
 *
 * OpenAPI spec version: 1.0.0
 * Contact: kmahmassani@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using BankAPI.Attributes;

using Microsoft.AspNetCore.Authorization;
using BankAPI.Models;

namespace BankAPI.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class PaymentsApiController : ControllerBase
    { 
        /// <summary>
        /// Process a card payment
        /// </summary>
        /// <remarks>Processes a payment and returns success or failure </remarks>
        /// <param name="body"></param>
        /// <response code="201">Payment processed successfully</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="422">Invalid data was sent</response>
        /// <response code="502">Bad gateway</response>
        [HttpPost]
        [Route("/process-card")]
        [ValidateModelState]
        [SwaggerOperation("ProcessCardPost")]
        [SwaggerResponse(statusCode: 201, type: typeof(PaymentResponse), description: "Payment processed successfully")]
        public virtual IActionResult ProcessCardPost([FromBody]PaymentRequest body)
        { 
            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(PaymentResponse));

            //TODO: Uncomment the next line to return response 401 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(401);

            //TODO: Uncomment the next line to return response 422 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(422);

            //TODO: Uncomment the next line to return response 502 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(502);
            string exampleJson = null;
            exampleJson = "{\n  \"approved\" : true,\n  \"id\" : \"id\"\n}";
            
                        var example = exampleJson != null
                        ? JsonConvert.DeserializeObject<PaymentResponse>(exampleJson)
                        : default(PaymentResponse);            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
